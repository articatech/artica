<?php

function influx_db_service(){
	$INITD_PATH="/etc/init.d/artica-postgres";
	$unix=new unix();
	$php=$unix->LOCATE_PHP5_BIN();	
	$cat=$unix->find_program("cat");
	
	$f[]="#!/bin/bash";
	$f[]="";
	$f[]="### BEGIN INIT INFO";
	$f[]="# Provides:          influxd";
	$f[]="# Required-Start:    \$all";
	$f[]="# Required-Stop:     \$remote_fs \$syslog";
	$f[]="# Default-Start:     2 3 4 5";
	$f[]="# Default-Stop:      0 1 6";
	$f[]="# Short-Description: Start influxd at boot time";
	$f[]="### END INIT INFO";
	$f[]="";
	$f[]="# this init script supports three different variations:";
	$f[]="#  1. New lsb that define start-stop-daemon";
	$f[]="#  2. Old lsb that don't have start-stop-daemon but define, log, pidofproc and killproc";
	$f[]="#  3. Centos installations without lsb-core installed";
	$f[]="#";
	$f[]="# In the third case we have to define our own functions which are very dumb";
	$f[]="# and expect the args to be positioned correctly.";
	$f[]="";
	$f[]="# Command-line options that can be set in /etc/default/influxdb.  These will override";
	$f[]="# any config file values. Example: \"-join http://1.2.3.4:8086\"";
	$f[]="INFLUXD_OPTS=";
	$f[]="";
	$f[]="USER=root";
	$f[]="GROUP=root";
	$f[]="nohup=". $unix->find_program("nohup");
	$f[]="rm=". $unix->find_program("rm");
	$f[]="DEFAULT=/etc/default/influxdb";
	$f[]="PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin";
	$f[]="name=influxd";
	
	$f[]="if [ ! -f \"/etc/artica-postfix/settings/Daemons/EnableInfluxDB\" ]; then";
	$f[]="\techo 1 >/etc/artica-postfix/settings/Daemons/EnableInfluxDB";
	$f[]="fi";
	
	
	$f[]="daemon=/opt/influxdb/influxd";
	$f[]="pidfile=/var/run/influxdb.pid";
	$f[]="piddir=`dirname \$pidfile`";
	$f[]="";
	$f[]="if [ -r /lib/lsb/init-functions ]; then";
	$f[]="    . /lib/lsb/init-functions";
	$f[]="fi";
	$f[]="";
	
	$f[]="";
	$f[]="if [ -r \$DEFAULT ]; then";
	$f[]="    source \$DEFAULT";
	$f[]="fi";
	$f[]="";
	$f[]="if [ -z \"\$STDOUT\" ]; then";
	$f[]="    STDOUT=/var/log/influxdb/influxdb.startup";
	$f[]="fi";
	$f[]="if [ ! -f \"\$STDOUT\" ]; then";
	$f[]="    mkdir -p `dirname \$STDOUT`";
	$f[]="fi";
	$f[]="";
	$f[]="if [ -z \"\$STDERR\" ]; then";
	$f[]="    STDERR=/var/log/influxdb/influxd.log";
	$f[]="fi";
	$f[]="if [ ! -f \"\$STDERR\" ]; then";
	$f[]="    mkdir -p `dirname \$STDERR`";
	$f[]="fi";
	$f[]="";
	$f[]="";
	$f[]="OPEN_FILE_LIMIT=65536";
	$f[]="";
	$f[]="function pidofproc() {";
	$f[]="    if [ \$# -ne 3 ]; then";
	$f[]="        echo \"Expected three arguments, e.g. \$0 -p pidfile daemon-name\"";
	$f[]="    fi";
	$f[]="";
	$f[]="    pid=`pgrep -f \$3`";
	$f[]="    local pidfile=`cat \$2`";
	$f[]="";
	$f[]="    if [ \"x\$pidfile\" == \"x\" ]; then";
	$f[]="        return 1";
	$f[]="    fi";
	$f[]="";
	$f[]="    if [ \"x\$pid\" != \"x\" -a \"\$pidfile\" == \"\$pid\" ]; then";
	$f[]="        return 0";
	$f[]="    fi";
	$f[]="";
	$f[]="    return 1";
	$f[]="}";
	$f[]="";
	$f[]="function killproc() {";
	$f[]="    if [ \$# -ne 3 ]; then";
	$f[]="        echo \"Expected three arguments, e.g. \$0 -p pidfile signal\"";
	$f[]="    fi";
	$f[]="";
	$f[]="    pid=`cat \$2`";
	$f[]="    kill -s \$3 \$pid";
	$f[]="}";
	$f[]="";
	$f[]="function log_failure_msg() {";
	$f[]="    echo \"[\$name]: \$@\" \"[ FAILED ]\"";
	$f[]="}";
	$f[]="";
	$f[]="function log_success_msg() {";
	$f[]="    echo \"[\$name]: \$@\" \"[ OK ]\"";
	$f[]="}";
	$f[]="function log_info_msg() {";
	$f[]="    echo \"[\$name]: \$@\" \"[ INFO ]\"";
	$f[]="}";
	$f[]="";
	$f[]="if [ ! -d \"\$piddir\" ]; then";
	$f[]="    mkdir -p \$piddir";
	$f[]="    chown \$GROUP:\$USER \$piddir";
	$f[]="fi";
	$f[]="";
	$f[]="# Configuration file";
	$f[]="config=/etc/opt/influxdb/influxdb.conf";
	
	$f[]="running_pid() {";
	$f[]="	# Check if a given process pid's cmdline matches a given name";
	$f[]="	pid=\$1";
	$f[]="	Dname=\$2";
	$f[]="	[ -z \"\$pid\" ] && return 1";
	$f[]="	[ ! -d /proc/\$pid ] &&  return 1";
	$f[]="	cmd=`$cat /proc/\$pid/cmdline | tr \"\\000\" \"\\n\"|head -n 1 |cut -d : -f 1`";
	$f[]="	# Is this the expected server";
	$f[]=" 	log_info_msg \"Found PID \$pid '\$cmd' which is '\$Dname'\"";
	$f[]="	[ \"\$cmd\" != \"\$Dname\" ] &&  return 1";
	$f[]="	return 0";
	$f[]="}";
	$f[]="";	
	
	$f[]="function running() {";
	$f[]="    # Check if the process is running looking at /proc";
	$f[]="    # (works for all users)";
	$f[]="    # No pidfile, probably no daemon present";
	$f[]="    [ ! -f \"\$pidfile\" ] && return 1";
	$f[]="    pid=`$cat \$pidfile`";
	$f[]="    running_pid \$pid \$daemon || return 1";
	$f[]="    return 0";
	$f[]="    }";
	$f[]="";
	$f[]="";
	$f[]="";
	$f[]="# If the daemon is not there, then exit.";
	$f[]="[ -x \$daemon ] || exit 5";
	$f[]="";
	$f[]="case \$1 in";
	$f[]="    start)";
	$f[]="# Checking if enabled or not";
	$f[]="ValInfluxUseRemoteIpaddr=\"\"";
	$f[]="ENABLED=1";
	$f[]="		if [ -f /etc/artica-postfix/settings/Daemons/EnableInfluxDB ]; then";
	$f[]="			ENABLED=`$cat /etc/artica-postfix/settings/Daemons/EnableInfluxDB`";
	$f[]="		fi";
	$f[]="";
	$f[]="		if [ -f /etc/artica-postfix/settings/Daemons/InfluxUseRemoteIpaddr ]; then";
	$f[]="			ValInfluxUseRemoteIpaddr=`$cat /etc/artica-postfix/settings/Daemons/InfluxUseRemoteIpaddr`";
	$f[]="		fi";	
	
	$f[]="		if [ -f /etc/artica-postfix/settings/Daemons/InfluxUseRemote ]; then";
  	$f[]="			InfluxUseRemote=`$cat /etc/artica-postfix/settings/Daemons/InfluxUseRemote`";
  	$f[]="			if [[ \$InfluxUseRemote -eq 1 ]]; then";
  	$f[]="                log_info_msg \"Using \$ValInfluxUseRemoteIpaddr as remote server - ABORTING -\"";
  	$f[]="				  exit 0";
  	$f[]="			fi";
  	$f[]="		fi";
  	$f[]="			if [[ \$ENABLED -eq 0 ]]; then";
  	$f[]="               log_info_msg \"Using InfluxDB is disabled - STOPPING -\"";
  	$f[]="            	 $php /usr/share/artica-postfix/exec.influxdb.php --stop";
  	$f[]="				 exit 0";
  	$f[]="			fi";
 
	
	
	$f[]="        # Checked the PID file exists and check the actual status of process";
	$f[]="        if [ -e \$pidfile ]; then";
	$f[]="            pidofproc -p \$pidfile \$daemon > /dev/null 2>&1 && status=\"0\" || status=\"\$?\"";
	$f[]="            # If the status is SUCCESS then don't need to start again.";
	$f[]="            if [ \"x\$status\" = \"x0\" ]; then";
	$f[]="                pid=`$cat \$pidfile`";
	$f[]="                log_info_msg \"Process already running PID \$pid\"";
	$f[]="                exit 0 # Exit";
	$f[]="            fi";
	$f[]="        fi";
	$f[]="";
	$f[]="        # Bump the file limits, before launching the daemon. These will carry over to";
	$f[]="        # launched processes.";
	$f[]="        ulimit -n \$OPEN_FILE_LIMIT";
	$f[]="        if [ \$? -ne 0 ]; then";
	$f[]="            log_failure_msg \"set open file limit to \$OPEN_FILE_LIMIT\"";
	$f[]="        fi";
	$f[]="";
	$f[]="        log_success_msg \"Reconfiguring parameters\"";
	$f[]="		  $php /usr/share/artica-postfix/exec.influxdb.php --config || true";
	$f[]="        log_info_msg \"Starting the process...\"";
	//$f[]="        log_info_msg \" \$nohup \$daemon -pidfile \$pidfile -config \$config \$INFLUXD_OPTS >>\$STDOUT 2>>\$STDERR &\"";
	$f[]="        \$nohup \$daemon -pidfile \$pidfile -config \$config \$INFLUXD_OPTS >>\$STDOUT 2>>\$STDERR &";
	$f[]="";
	$f[]="  	for i in {1..5}";
	$f[]="  	 	do";
	$f[]="  	 	if running ;  then";
   	$f[]="  	 		log_success_msg \"Process was started\"";
   	$f[]="  	 		exit 0";
   	$f[]="			fi";
   	$f[]="			log_info_msg \"Waiting to run \$i/5\"";
   	$f[]="			sleep 1";
	$f[]="		done";
	$f[]="";
	$f[]="      log_failure_msg \"Starting failed, removing messaging file\"";
	$f[]="		\$rm /home/artica/squid/InfluxDB/db/messaging >/dev/null 2>&1 ||true";
	$f[]="		log_info_msg \"Starting the process again...\"";
	$f[]="      \$nohup \$daemon -pidfile \$pidfile -config \$config \$INFLUXD_OPTS >>\$STDOUT 2>>\$STDERR &";
	$f[]="  	for i in {1..5}";
	$f[]="  	 	do";
	$f[]="  	 	if running ;  then";
	$f[]="  	 		log_success_msg \"\Process was started\"";
	$f[]="  	 		exit 0";
	$f[]="			fi";
	$f[]="			log_info_msg \"Waiting to run \$i/5...\"";
	$f[]="			sleep 1";
	$f[]="		done";	
	$f[]="  	 	if running ;  then";
	$f[]="  	 		log_success_msg \"\Process was started\"";
	$f[]="  	 		exit 0";
	$f[]="			fi";
	$f[]="            log_failure_msg \"Failed to start the service\"";
	$f[]="        ;;";
	$f[]="";
	$f[]="    stop)";
	$f[]="		  $php /usr/share/artica-postfix/exec.influxdb.php --stop";
	$f[]="        ;;";
	$f[]="";
	$f[]="    restart)";
	$f[]="        # Restart the daemon.";
	$f[]="        \$0 stop && sleep 2 && \$0 start";
	$f[]="			log_info_msg \"Restarting the Squid Tail daemon...\"";
	$f[]="		  /etc/init.d/squid-tail restart >/dev/null 2>&1";
	$f[]="			log_info_msg \"Restarting the Webfiltering Tail daemon...\"";
	$f[]="		  /etc/init.d/ufdb-tail restart >/dev/null 2>&1";
	$f[]="			log_info_msg \"Restarting the HyperCache Tail daemon...\"";
	$f[]="		  /etc/init.d/hypercache-tail restart >/dev/null 2>&1";
	$f[]="        ;;";
	$f[]="";
	$f[]="    status)";
	$f[]="        # Check the status of the process.";
	$f[]="        if [ -e \$pidfile ]; then";
	$f[]="            if pidofproc -p \$pidfile \$daemon > /dev/null; then";
	$f[]="                log_success_msg \"Process is running\"";
	$f[]="                exit 0";
	$f[]="            else";
	$f[]="                log_failure_msg \"\$name Process is not running\"";
	$f[]="                exit 1";
	$f[]="            fi";
	$f[]="        else";
	$f[]="            log_failure_msg \"Process is not running\"";
	$f[]="            exit 3";
	$f[]="        fi";
	$f[]="        ;;";
	$f[]="";
	$f[]="    version)";
	$f[]="        \$daemon version";
	$f[]="        ;;";
	$f[]="";
	$f[]="    *)";
	$f[]="        # For invalid arguments, print the usage message.";
	$f[]="        echo \"Usage: \$0 {start|stop|restart|status|version}\"";
	$f[]="        exit 2";
	$f[]="        ;;";
	$f[]="esac";
	
	@file_put_contents($INITD_PATH, @implode("\n", $f));

	@chmod($INITD_PATH,0755);
	
	if(is_file('/usr/sbin/update-rc.d')){
		shell_exec("/usr/sbin/update-rc.d -f " .basename($INITD_PATH)." defaults >/dev/null 2>&1");
	}
	
}